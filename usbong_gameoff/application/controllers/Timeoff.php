<?php
defined('BASEPATH') OR exit('No direct script access allowed');

/*
' Copyright 2020~2022 USBONG
'
' Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You ' may obtain a copy of the License at
'
' http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, ' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing ' permissions and limitations under the License.
'
' @company: USBONG
' @author: SYSON, MICHAEL B.
' @date created: 20200306
' @date updated: 20221215; from 20221210
'
' Note: re-used computer instructions mainly from the following:
'	1) Usbong Knowledge Management System (KMS);
'	2) Usbong Game Off 2022;
*/

class Timeoff extends CI_Controller {
	/**
	 * Index Page for this controller.
	 *
	 * Maps to the following URL
	 * 		http://example.com/index.php/welcome
	 *	- or -
	 * 		http://example.com/index.php/welcome/index
	 *	- or -
	 * Since this controller is set as the default controller in
	 * config/routes.php, it's displayed at http://example.com/
	 *
	 * So any other public methods not prefixed with an underscore will
	 * map to /index.php/welcome/<method_name>
	 * @see https://codeigniter.com/user_guide/general/urls.html
	 */
	public function index()
	{
		session_destroy();
		session_start();
	
		date_default_timezone_set('Asia/Hong_Kong');
		$dateTimeStamp = date('Y/m/d H:i:s');

		//example website address: 
		//http://localhost/usbong_time/index.php/timeoff/

		//edited by Mike, 20221215
		//$data="";		
		$data['sRecordedSteps']=$this->getAutoGeneratedPuzzleFromStorage();		
		
		if ($data['sRecordedSteps']==false) {
			echo "No auto-generated puzzle yet!";
			//TO-DO: -add: IF so, auto-generate
		}
		else {
			$this->load->view('timeoff', $data);
		}
		
		
		//added by Mike, 20221214; removed by Mike, 20221214;
		//$this->autoGeneratePuzzleFromEndForStorage();
	}
	
	//added by Mike, 20221214
	//website address to execute COMMAND
	//http://localhost/usbong_time/index.php/Timeoff/autoGeneratePuzzleFromEndForStorage;
	public function autoGeneratePuzzleFromEndForStorage()
	{
		$this->load->view('autoGeneratePuzzleFromEndForStorage.php');
	}
	
	//added by Mike, 20221214
	public function addAutoGeneratedPuzzleToStorage($sRecordedSteps)
	{
		//$sRecordedSteps="123";
		//echo $sRecordedSteps;

		date_default_timezone_set('Asia/Hong_Kong');
		$dateTimeStamp = date('Y/m/d H:i:s');
		
		$data['sRecordedSteps'] = $sRecordedSteps;		
		$data['puzzleDate'] = date('m/d/Y');	
					
		$this->load->model('Timeoff_Model');
		$puzzleId = $this->Timeoff_Model->addAutoGeneratedPuzzle($data);


		//reminder: with PHP, use "." (dot), instead of "+" (plus)
		echo "puzzleId: ".$puzzleId."<br/>";
		echo "<br/>";
		echo "sRecordedSteps: ".$sRecordedSteps."<br/>";
		echo "<br/>";
		echo "DONE!";
		
	}
	
	//added by Mike, 20221215
	public function getAutoGeneratedPuzzleFromStorage()
	{	
		//$sRecordedSteps="123";
		//echo $sRecordedSteps;

		date_default_timezone_set('Asia/Hong_Kong');
		$dateTimeStamp = date('Y/m/d H:i:s');
		
//		$data['sRecordedSteps'] = $sRecordedSteps;		
		$data['puzzleDate'] = date('m/d/Y');	
					
		$this->load->model('Timeoff_Model');
		
		$puzzleRowArray = $this->Timeoff_Model->getAutoGeneratedPuzzle($data);
		$data['sRecordedSteps']=null;
		
		//echo $puzzleRowArray[0]['puzzle_recorded_steps'];
	
/* //removed by Mike, 20221215		
		//no auto-generated steps yet
		if ($puzzleRowArray==false) {
			echo "No auto-generated puzzle yet!";
			autoGeneratePuzzleFromEndForStorage();
			
			$puzzleRowArray = $this->Timeoff_Model->getAutoGeneratedPuzzle($data);
			$data['sRecordedSteps'] = $puzzleRowArray[0]['puzzle_recorded_steps'];			}
		else {
			$data['sRecordedSteps'] = $puzzleRowArray[0]['puzzle_recorded_steps'];
		}
*/		

		//$data['sRecordedSteps'] = $puzzleRowArray[0]['puzzle_recorded_steps'];

		if ($puzzleRowArray==false) {
			return false;
		}
		else {
			return $puzzleRowArray[0]['puzzle_recorded_steps'];
		}
	}
}
